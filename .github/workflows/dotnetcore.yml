name: .NET Core

on:
  push:
    branches: [ github-action-for-private-build ]
  pull_request:
    branches: [ github-action-for-private-build ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Replace netcoreapp version in tests .csproj
      # Needed because we don't want to change the .csproj in the actual repo, but Ubuntu doesn't come with netcoreapp2.0 installed
      # Do this as early as possible -- needs to be before the restore step, at least
      run: sed -ie 's/netcoreapp2.0/netcoreapp3.1/' tests/CommandLine.Tests/CommandLine.Tests.csproj
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
        source-url: https://nuget.pkg.github.com/rmunn/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install dependencies
      run: dotnet restore
    - name: Load version from file
      # For this fork, we just keep the version number in a version.txt file, which we'll update when we need to
      run: echo "::set-env name=BUILDVER::$(cat version.txt)"
    - name: Build
      run: dotnet build src/CommandLine/CommandLine.csproj --version-suffix ${{ env.BUILDVER }} --configuration Release --no-restore
    - name: Test
      run: dotnet test -f netcoreapp3.1 tests/CommandLine.Tests/CommandLine.Tests.csproj --no-restore --verbosity normal
    - name: Pack
      run: dotnet pack src/CommandLine/CommandLine.csproj --version-suffix ${{ env.BUILDVER }} --configuration Release --no-restore
    - name: Save build artifact
      uses: actions/upload-artifact@v2
      with:
        name: CommandLineParser.${{ env.BUILDVER }}.nupkg
        path: src/CommandLine/bin/Release/CommandLineParser.${{ env.BUILDVER }}.nupkg
    - name: Upload package to GitHub
      run: dotnet nuget push src/CommandLine/bin/Release/CommandLineParser.${{ env.BUILDVER }}.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
